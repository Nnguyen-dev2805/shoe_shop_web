package com.dev.shoeshop.service.impl;

import com.dev.shoeshop.dto.OrderNotificationDTO;
import com.dev.shoeshop.service.NotificationService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.stereotype.Service;

/**
 * Service implementation ƒë·ªÉ g·ª≠i th√¥ng b√°o real-time qua WebSocket
 * S·ª≠ d·ª•ng SimpMessagingTemplate ƒë·ªÉ broadcast messages ƒë·∫øn clients
 */
@Service
public class NotificationServiceImpl implements NotificationService {

    @Autowired
    private SimpMessagingTemplate messagingTemplate;

    /**
     * G·ª≠i th√¥ng b√°o ƒë∆°n h√†ng m·ªõi ƒë·∫øn admin
     */
    @Override
    public void sendNewOrderNotification(OrderNotificationDTO notification) {
        System.out.println("=== Sending NEW ORDER notification via WebSocket ===");
        System.out.println("Order ID: " + notification.getOrderId());
        System.out.println("Customer: " + notification.getCustomerName());
        System.out.println("Total: " + notification.getTotalPrice());
        
        // Set notification type and message
        notification.setNotificationType("NEW_ORDER");
        notification.setMessage("üõçÔ∏è ƒê∆°n h√†ng m·ªõi t·ª´ " + notification.getCustomerName());
        notification.setTimestamp(System.currentTimeMillis());
        
        // Send to topic /topic/admin/orders
        // Admin clients subscribe to this topic
        messagingTemplate.convertAndSend("/topic/admin/orders", notification);
        
        System.out.println("‚úÖ Notification sent to /topic/admin/orders");
    }

    /**
     * G·ª≠i th√¥ng b√°o h·ªßy ƒë∆°n h√†ng ƒë·∫øn admin
     */
    @Override
    public void sendOrderCancelledNotification(OrderNotificationDTO notification) {
        System.out.println("=== Sending ORDER CANCELLED notification via WebSocket ===");
        
        notification.setNotificationType("ORDER_CANCELLED");
        notification.setMessage("‚ùå ƒê∆°n h√†ng #" + notification.getOrderId() + " ƒë√£ b·ªã h·ªßy");
        notification.setTimestamp(System.currentTimeMillis());
        
        messagingTemplate.convertAndSend("/topic/admin/orders", notification);
        
        System.out.println("‚úÖ Cancellation notification sent");
    }

    /**
     * G·ª≠i th√¥ng b√°o c·∫≠p nh·∫≠t ƒë∆°n h√†ng ƒë·∫øn admin
     */
    @Override
    public void sendOrderUpdatedNotification(OrderNotificationDTO notification) {
        System.out.println("=== Sending ORDER UPDATED notification via WebSocket ===");
        
        notification.setNotificationType("ORDER_UPDATED");
        notification.setMessage("üîÑ ƒê∆°n h√†ng #" + notification.getOrderId() + " ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t");
        notification.setTimestamp(System.currentTimeMillis());
        
        messagingTemplate.convertAndSend("/topic/admin/orders", notification);
        
        System.out.println("‚úÖ Update notification sent");
    }
}
